# ===== NETWORK CONFIGURATION =====
# Network to deploy to (sepolia, mainnet, localhost, etc.)
NETWORK=sepolia

# ===== DEPLOYMENT CONFIGURATION =====
# Set to 'true' for full deployment (all facets), 'false' for standard deployment (core facets only)
FULL_DEPLOYMENT=false

# ===== DIAMOND ADDRESS =====
# Diamond proxy address (will be auto-filled after deployment)
# If not set, the script will try to read from deployment file
DIAMOND_ADDRESS=

# ===== STABLECOIN CONFIGURATION =====
# Address of the stablecoin contract (USDC, USDT, etc.)
# Required for initial deployment
STABLECOIN_ADDRESS=0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238

# ===== TOKEN CONFIGURATION =====
# Initial global token price in wei (default: 100000 = N100,000)
INITIAL_TOKEN_PRICE=100000

# ===== ETHERSCAN API =====
# Etherscan API key for contract verification
# Get your API key from: https://etherscan.io/apis
ETHERSCAN_API_KEY=your_etherscan_api_key_here

# ===== PRIVATE KEY =====
# Private key for deployment (keep this secret!)
# Format: 0x followed by 64 hex characters
PRIVATE_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

# ===== RPC URLS =====
# Ethereum RPC URL for the network you're deploying to
# Examples:
# Sepolia: https://sepolia.infura.io/v3/YOUR_PROJECT_ID
# Mainnet: https://mainnet.infura.io/v3/YOUR_PROJECT_ID
# Local: http://127.0.0.1:8545
RPC_URL=https://sepolia.infura.io/v3/your_project_id_here

# ===== GAS CONFIGURATION =====
# Gas price in wei (optional, will use network default if not set)
# GAS_PRICE=20000000000

# Gas limit for transactions (optional, will estimate if not set)
# GAS_LIMIT=5000000

# ===== DEPLOYMENT OPTIONS =====
# Set to 'true' to enable gas estimation logging
VERBOSE_GAS=false

# Set to 'true' to skip contract verification (faster deployment)
SKIP_VERIFICATION=false

# ===== UPGRADE CONFIGURATION =====
# Note: Most upgrade configuration is now handled in upgrade-config.json
# Environment variables below are for advanced use cases

# Set to 'true' to enable strict mode (fail on configuration mistakes instead of auto-correcting)
STRICT_MODE=false

# Set to 'true' to enable dry-run mode (simulate deployment without actually deploying)
DRY_RUN=false

# ===== TESTING CONFIGURATION =====
# Set to 'true' to run in test mode (uses test accounts)
TEST_MODE=false

# Test account private key (for testing only)
TEST_PRIVATE_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

# ===== MONITORING =====
# Set to 'true' to enable deployment monitoring
ENABLE_MONITORING=false

# Webhook URL for deployment notifications (optional)
WEBHOOK_URL=

# ===== SECURITY =====
# Set to 'true' to enable additional security checks
SECURITY_CHECKS=true

# Maximum gas price in wei (fails deployment if exceeded)
MAX_GAS_PRICE=50000000000

# ===== BACKUP CONFIGURATION =====
# Set to 'true' to create backup of deployment data
CREATE_BACKUP=true

# Backup directory (relative to project root)
BACKUP_DIR=backups

# ===== NOTES =====
# 1. Copy this file to .env and fill in your actual values
# 2. Never commit .env file to version control
# 3. Keep your private keys secure
# 4. Use different keys for different networks
# 5. Test on testnets before mainnet deployment

# ===== QUICK START =====
# 1. Copy this file: cp env.example .env
# 2. Fill in your values (especially PRIVATE_KEY and ETHERSCAN_API_KEY)
# 3. Deploy: npx hardhat run scripts/deploy.js --network sepolia
# 4. Upgrade: npx hardhat run scripts/upgrade.js --network sepolia
# 5. Verify: npx hardhat run scripts/verify.js --network sepolia 